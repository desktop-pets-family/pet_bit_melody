FROM ubuntu:latest

ENV LOCATION=docker-server \
    DEBIAN_FRONTEND=noninteractive \
    HOME=/srv \
    ENV_NAME=server_env \
    LAUNCH_FILE=./src \
    HOST="0.0.0.0" \
    PORT=5000 \
    DEBUG=False \
    LAUNCH_SERVER_ON_BOOT=True \
    SYSTEM_ENV_LOCATION=/the_system_environement \
    SYSTEM_ENV_NAME=docker_env \
    LOG_SERVER_DATA=False \
    LOG_PATH="/srv/log" \
    LOG_ADD_DATE=True \
    LOG_FILE_FORMAT="log" \
    LOG_DATA='log_' \
    BASH_FILE_LAUNCHER=./my_docker_bash_launcher.sh

# Update de docker system, install tzdata, set the timezone to Europe/Paris, install mariadb dependencies and install python in the container
RUN apt update && apt upgrade -y \
    && apt-get install -y tzdata \
    && ln -fs /usr/share/zoneinfo/Europe/Paris /etc/localtime \
    && dpkg-reconfigure --frontend noninteractive tzdata \
    && apt-get install -y libmariadb-dev \
    && apt install -y \
    python3 \
    python3-pip \
    python3-dev \
    python3-venv \
    build-essential

# Go to the working folder
WORKDIR ${HOME}

# Copy the content of the backend into the container
COPY . ${HOME}

# Create a system environement and also run the setup code from the project
RUN mkdir -p ${SYSTEM_ENV_LOCATION} \
    && python3 -m venv ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME} \
    && . ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME}/bin/activate \
    && pip3 install -r ./requirements.txt \
    && make create_environement install_dependencies \
    && deactivate

# Inject environement activations into shell configuration files
# RUN echo ". ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME}/bin/activate" >> /etc/profile \
#     && echo ". ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME}/bin/activate" >> /etc/zprofile \
#     && echo ". ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME}/bin/activate" >> /etc/csh.cshrc \
#     && echo ". ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME}/bin/activate" >> /etc/csh.login \
#     && echo ". ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME}/bin/activate" >> /etc/bash.bashrc \
#     && mkdir -p /etc/zsh/ && echo ". ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME}/bin/activate" >> /etc/zsh/zshrc \
#     && mkdir -p /etc/fish && echo ". ${SYSTEM_ENV_LOCATION}/${SYSTEM_ENV_NAME}/bin/activate" >> /etc/fish/config.fish

# Expose the ports that need to be used
EXPOSE 1024-9000

# Dump script runner
RUN echo '#!/bin/bash' > ${BASH_FILE_LAUNCHER} \
    && echo ". \${SYSTEM_ENV_LOCATION}/\${SYSTEM_ENV_NAME}/bin/activate" >> ${BASH_FILE_LAUNCHER} \
    && echo "sleep 5s" >> ${BASH_FILE_LAUNCHER} \
    && echo "cd \"\$HOME\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "LOGGER_COMMAND=\"\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "if [[ \"\${LOG_SERVER_DATA,,}\" == 'true' ]]; then" >> ${BASH_FILE_LAUNCHER} \
    && echo "  echo 'setting logger command'" >> ${BASH_FILE_LAUNCHER} \
    && echo "  mkdir -p \"\${LOG_PATH}\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "  DATA=\"\$LOG_PATH/\$LOG_DATA\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "  if [[ \"\${LOG_ADD_DATE,,}\" == 'true' ]]; then" >> ${BASH_FILE_LAUNCHER} \
    && echo "    DATA+=\"_\$(date -u +%Y_%m_%dT%Hh%Mm%SZ)\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "  fi" >> ${BASH_FILE_LAUNCHER} \
    && echo "  DATA+=\".\${LOG_FILE_FORMAT}\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "  echo \"log file name: \$DATA\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "  LOGGER_COMMAND=\">\\\"\${DATA}\\\" 2>&1 & tail -f \\\"\${DATA}\\\"\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "fi" >> ${BASH_FILE_LAUNCHER} \
    && echo "CMD=\"python3 \$LAUNCH_FILE --port=\"\$PORT\" --host=\"\$HOST\"\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "if [[ \"\${DEBUG,,}\" == 'true' ]]; then CMD+=\" --debug\";fi" >> ${BASH_FILE_LAUNCHER} \
    && echo "echo \"python command: \$CMD\"" >> ${BASH_FILE_LAUNCHER} \
    && echo "if [[ \"\${LAUNCH_SERVER_ON_BOOT,,}\" != 'true' ]]; then echo 'debug is true';/bin/bash ; exit \$?; fi" >> ${BASH_FILE_LAUNCHER} \
    && echo "if [[ -n \"\$LOGGER_COMMAND\" ]]; then" >> ${BASH_FILE_LAUNCHER} \
    && echo "  \$CMD \$LOGGER_COMMAND" >> ${BASH_FILE_LAUNCHER} \
    && echo "else" >> ${BASH_FILE_LAUNCHER} \
    && echo "  \$CMD" >> ${BASH_FILE_LAUNCHER} \
    && echo "fi" >> ${BASH_FILE_LAUNCHER} \
    && chmod +x "$BASH_FILE_LAUNCHER" \
    && cp -f ${BASH_FILE_LAUNCHER} ${SYSTEM_ENV_LOCATION}

# Cleaning cache
RUN apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# Entry point
CMD ["/bin/bash", "-c", "cp -f ${SYSTEM_ENV_LOCATION}/${BASH_FILE_LAUNCHER} ${HOME}/${BASH_FILE_LAUNCHER} && chmod +x ${BASH_FILE_LAUNCHER} && ${BASH_FILE_LAUNCHER}"]
